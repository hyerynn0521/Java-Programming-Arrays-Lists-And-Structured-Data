import edu.duke.*;
/**
 * Write a description of CaesarCipherTwo here.
 * 
 * @author (your name) 
 * @version (a version number or a date)
 */
public class CaesarCipherTwo {
    private String alphabet;
    private String shiftedAlphabet1;
    private String shiftedAlphabet2;
    private int mainKey1;
    private int mainKey2;
    public CaesarCipherTwo(int key1, int key2){
        mainKey1 = key1;
        mainKey2 = key2;
        alphabet = "abcdefghijklmnopqrstuvwxyz";
        shiftedAlphabet1 = alphabet.substring(key1) + alphabet.substring(0, key1);
        shiftedAlphabet2 = alphabet.substring(key2) + alphabet.substring(0, key2);
        
    }
    public String encrypt(String input){
        StringBuilder encrypt = new StringBuilder(input);
        
        
            for (int i = 0; i<encrypt.length();i++){
            char currChar = input.charAt(i);
            int LowerCurrIndex = alphabet.indexOf(currChar);
            int UpperCurrIndex = alphabet.toUpperCase().indexOf(currChar);
            if (LowerCurrIndex != -1  || UpperCurrIndex != -1){
                if (i%2 == 0 ){
                    if (Character.isUpperCase(currChar)){
                        encrypt.setCharAt(i, shiftedAlphabet1.charAt(UpperCurrIndex));
                    }
                    else{
                        encrypt.setCharAt(i, shiftedAlphabet1.toLowerCase().charAt(LowerCurrIndex));
                    }
                }
                else if (i%2 != 0){
                    if (Character.isUpperCase(currChar)){
                        encrypt.setCharAt(i, shiftedAlphabet2.charAt(UpperCurrIndex));
                    }
                    else{
                        encrypt.setCharAt(i, shiftedAlphabet2.toLowerCase().charAt(LowerCurrIndex));
                    }
                }
            }
        }
        return encrypt.toString();
    }
    public String decrypt(String input){
        StringBuilder decrypt = new StringBuilder(input);
        
        CaesarCipher cc1 = new CaesarCipher(26-mainKey1);
        CaesarCipher cc2 = new CaesarCipher(26-mainKey2);
        String encrypted1 = cc1.encrypt(input);
        String encrypted2 = cc2.encrypt(input);
        for (int i=0; i<input.length(); i++){
            char currChar = input.charAt(i);
            int LowerCurrIndex = alphabet.indexOf(currChar);
            int UpperCurrIndex = alphabet.toUpperCase().indexOf(currChar);
            
            if (LowerCurrIndex != -1  || UpperCurrIndex != -1){
                if (i%2 == 0 ){
                    if (Character.isUpperCase(currChar)){
                        decrypt.setCharAt(i, encrypted1.charAt(UpperCurrIndex));
                    }
                    else{
                        decrypt.setCharAt(i, encrypted1.toLowerCase().charAt(LowerCurrIndex));
                    }
                }
                else if (i%2 != 0){
                    if (Character.isUpperCase(currChar)){
                        decrypt.setCharAt(i, encrypted2.charAt(UpperCurrIndex-1));
                    }
                    else{
                        decrypt.setCharAt(i, encrypted2.toLowerCase().charAt(LowerCurrIndex-1));
                    }
                }
            }
        }
        return decrypt.toString();
    }
}
